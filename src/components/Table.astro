---
import { table } from "../utils/api";

export interface Props {
  table: table;
}

const { table } = Astro.props as Props;
---

<table>
  <tr>
    <th>Externality</th>
    <th>True cost</th>
    <th>Unit</th>
    <th>True cost (%)</th>
  </tr>
  {table.table_row.map((item, i) => (
    <tr class={`row-${i.toString()}`}>
      <td class="externality">{item.externality}</td>
      <td class="cost number">{item.true_cost}</td>
      <td class="unit">{item.unit}</td>
      <td class="percentage number">{item.true_cost_percentage}%</td>
    </tr>
  ))}
</table>

<style>
  .container {
    display: flex;
    justify-content: space-between;
  }

  table {
    border: 2px solid;
    border-collapse: collapse;
    width: auto;
    border-color: #000;
    margin: 0 25px;
  }

  th,
  td {
    padding: 2px 8px;
    text-align: left;
    border-bottom: 2px solid;
    border-right: 2px solid;
    border-color: #000;
  }

  td {
    color: #000;
  }

  .number {
    text-align: right;
  }

  .row-0 {
    background-color: var(--row-1);
  }

  .row-1 {
    background-color: var(--row-2);
  }

  .row-2 {
    background-color: var(--row-3);
  }

  .row-3 {
    background-color: var(--row-4);
  }

  .row-4 {
    background-color: var(--row-5);
  }

  .row-5 {
    background-color: var(--row-6);
  }

  .row-6 {
    background-color: var(--row-7);
  }

  @media only screen and (max-width: 1160px) {
    .container {
      flex-direction: column;
    }

    table {
      margin: 20px 0;
    }
  }

  @media only screen and (max-width: 425px) {
    th,
    td {
      padding: 0px 3px;
    }
  }
</style>
